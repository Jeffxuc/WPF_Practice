<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    
    <Style x:Key="itemStyle01" TargetType="ListViewItem">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border BorderThickness="0" Background="Transparent">
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--【1】. 设置ListView的样式，未设置每个子条目的 Style -->
    <Style x:Key="listViewStyle01" TargetType="ListView">
        <Setter Property="Background" Value="Silver"/>
        <!--1. Set the template that defines the panel that controls the layout of items-->
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <!--2. Set the Template for the whole ListView other than the ListViewItem.
               Attention: the Template must include "ItemsPresenter", otherwise the 
               items in the ListView will can't be display.-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListView">
                    <Border CornerRadius="8" Background="{TemplateBinding Background}">
                        <ItemsPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--【1-1：SubElement】. 用来设置 ListView 中每个 data item样式，即数据显示的样式模板，它是 ListViewItem 的内容，即 ContentPresenter-->
    <DataTemplate x:Key="myItemTemplate">
        <Grid>
            <Rectangle Fill="Bisque" Width="70"/>
            <StackPanel>
                <TextBlock Text="{Binding Path=cityName}" HorizontalAlignment="Center"/>
                <TextBlock Text="{Binding Path=cityNum}" HorizontalAlignment="Center"/>
            </StackPanel>
        </Grid>
    </DataTemplate>

    <!--【1-2：SubElement】. 用来设置每个条目容器的样式，即 ListViewItem 的样式，但是无法在 Trigger 中设置 Background-->
    <Style x:Key="itemContainerStyle01" TargetType="ListViewItem">
        <Setter Property="Width" Value="80"/>
        <Setter Property="Background" Value="Cyan"/>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <!--The "Foreground" can work normally when the Trigger Fired.-->
                <Setter Property="Foreground" Value="Blue"/>

                <!--****** The "Background" value can't work when the Trigger Fired******-->
                <Setter Property="Background" Value="Red"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--【1-2：SubElement】. 设置 ListViewItem 的样式，以及在 Trigger 中设置 Background-->
    <Style x:Key="itemContainerStyle01_BgColor" TargetType="ListViewItem">
        <Setter Property="Width" Value="80"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border x:Name="bd" Background="DeepSkyBlue">
                        <ContentPresenter/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bd" Property="Background" Value="red"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="bd" Property="Background" Value="Blue"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--【1-3：SubElement】. 用来设置每个条目容器的样式，即 ListViewItem 的样式-->
    <Style x:Key="itemContainerStyle02" TargetType="ListViewItem">
        <Setter Property="Width" Value="75"/>
        <Setter Property="Margin" Value="2,2,0,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border>
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--【1-4：SubElement】. 用来设置每个条目容器的样式，即 ListViewItem 的样式-->
    <Style x:Key="itemContainerStyle03" TargetType="ListViewItem">
        <Setter Property="Width" Value="90"/>
        <Setter Property="Margin" Value="2,2,0,0"/>
        <Setter Property="Background" Value="#7FFFD4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border x:Name="border" BorderThickness="2" BorderBrush="PaleVioletRed" Background="{TemplateBinding Background}" CornerRadius="4">
                        <ContentPresenter HorizontalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="border" Property="Background" Value="Yellow"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="Blue"/>
                        </Trigger>
                        
                        <!--注意必须要指明触发EventTrigger的SourceName，否则对应的事件无法被触发。
                            Storyboard的动画默认会保持最后的效果，如果要动画结束后恢复最初的样式，需要设置 FillBehavior="Stop"-->
                        <EventTrigger RoutedEvent="MouseLeftButtonDown" SourceName="border">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation  Storyboard.TargetName="border"
                                                     Storyboard.TargetProperty="Background.Color"
                                                     To="HotPink" Duration="0:0:0"/>
                                    <DoubleAnimation Storyboard.TargetName="border"
                                                     Storyboard.TargetProperty="Opacity"
                                                     From="1.0" To="0.4" Duration="0:0:0.5" FillBehavior="Stop"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--【2】. 设置ListView的样式，及 ItemTemplate 所对应的 DataTemplate 样式，没有设置ListViewItem的样式-->
    <Style x:Key="listViewStyle02" TargetType="ListView">
        <!--1. Set the template that defines the panel that controls the layout of items-->
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <!--2. Set the Template for the whole ListView other than the ListViewItem.
               Attention: the Template must include "ItemsPresenter", otherwise the 
               items in the ListView will can't be display.-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListView">
                    <Border CornerRadius="8" Background="Transparent" BorderThickness="2" BorderBrush="Turquoise">
                        <ItemsPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--3. Set the item template of ListView, each item template value is a DataTemplate used to 
               describes the visual structure of a data object contained in the ListViewItem.-->
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid>
                        <Rectangle Fill="BurlyWood" Width="70"/>
                        <StackPanel>
                            <TextBlock Text="{Binding Path=cityName}"/>
                            <TextBlock Text="{Binding Path=cityNum}"/>
                        </StackPanel>
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--【3】. 设置ListView的样式: 1. ItemsPanel，2. ListView Template, 3. ListViewItem，4. ItemTemplate-->
    <Style x:Key="listViewStyle13" TargetType="ListView">
        <!--1. Set the template that defines the panel that controls the layout of items-->
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <!--2. Set the Template for the whole ListView other than the ListViewItem.
               Attention: the Template must include "ItemsPresenter", otherwise the 
               items in the ListView will can't be display.-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListView">
                    <Border CornerRadius="5" Background="Transparent" BorderThickness="1" BorderBrush="Turquoise">
                        <ItemsPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--3. The ListViewItem style-->
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListViewItem">
                    <Setter Property="Width" Value="564"/>
                    <Setter Property="Height" Value="120"/>
                    <Setter Property="Background" Value="Pink"/>
                    <Setter Property="Margin" Value="8"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListViewItem">
                                <Border BorderThickness="0">
                                    <!--<Border.Effect>
                                        <DropShadowEffect Color="Black" Opacity="0.2"/>
                                    </Border.Effect>-->

                                    <ContentPresenter/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <!--4. The Content of ListViewItem.
               Set the item template of ListView, each item template value is a DataTemplate used to 
               describes the visual structure of a data object contained in the ListViewItem.-->
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Width="48" Height="48" Margin="36" Text="{Binding Path=img}" Background="DarkGoldenrod"/>
                            <StackPanel Grid.Column="1" VerticalAlignment="Center" Orientation="Vertical" HorizontalAlignment="Stretch">
                                <Grid Margin="0,0,40,6">
                                    <TextBlock HorizontalAlignment="Left" Text="{Binding Path=descText}"/>
                                    <TextBlock HorizontalAlignment="Right" Text="80 %"/>
                                </Grid>
                                <ProgressBar Margin="0,0,40,0" Height="5" Value="80"/>
                            </StackPanel>
                        </Grid>
                        <!--<Border.Effect>
                            <DropShadowEffect Color="Black" Opacity="0.2"/>
                        </Border.Effect>-->
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    
    <!--【4】 ***Recommend way*** for style set as two section: 1). The ListView-->
    <Style x:Key="detailTestItemStyle" TargetType="ListView">
        <Setter Property="Background" Value="Pink"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" Width="48" Height="48" Margin="36" Text="{Binding Path=img}" Background="DarkGoldenrod"/>
                        <StackPanel Grid.Column="1" Orientation="Vertical" HorizontalAlignment="Stretch" Margin="0,0,40,0" VerticalAlignment="Center">
                            <Grid Margin="0,0,0,6">
                                <TextBlock HorizontalAlignment="Left" Text="{Binding Path=descText}"/>
                                <TextBlock HorizontalAlignment="Right" Text="80 %"/>
                            </Grid>
                            <ProgressBar Height="5" Value="80" VerticalAlignment="Top"/>
                        </StackPanel>
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="listViewItemStyle" TargetType="ListViewItem">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="#ffffff"/>
        <Setter Property="Opacity" Value="0.9"/>
        <Setter Property="Width" Value="564"/>
        <Setter Property="Height" Value="120"/>
        <Setter Property="Margin" Value="0,5,8,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="8">
                        <ContentPresenter/>
                        <Border.Effect>
                            <DropShadowEffect Color="Black" Opacity="0.2" Direction="310"/>
                        </Border.Effect>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--************************************************************************-->
    <!--【6】ListView Style -->
    <Style x:Key="listViewStyle03" TargetType="ListView">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="itemContainerStyle10" TargetType="ListViewItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border>
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>   